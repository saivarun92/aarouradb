---
- name: Get time from the system
  shell: "date +%Y-%m-%d-%H-%M-%S"
  register: current_time

- name: Store time stdout in fact
  set_fact:
    current_time: "{{ current_time.stdout }}"

- name: Create RDB snapshot and wait for it to become available
  tags: backup
  command:  aws rds --region us-east-2 create-db-cluster-snapshot --db-cluster-snapshot-identifier sai-test-1-782021-3  --db-cluster-identifier lims-anc-tst
  
- name: sleep
  wait_for:
    timeout: 300
  delegate_to: localhost
  
- name: sharing the RDS snapshot
  tags: sharing
  command: aws rds modify-db-cluster-snapshot-attribute --region us-east-2 --db-cluster-snapshot-identifier sai-test-1-782021-3 --attribute-name restore --values-to-add 122511138117
####################################################
#  rds:
#    command: snapshot
#    region: "{{ region }}"
 #   instance_name: "{{ source_db_name }}"
#    snapshot: "{{ snapshot_name }}-{{ current_time }}"
#    wait: yes
#    wait_timeout: 600
#  register: snapshot_out

#- hosts: localhost
#  connection: local
#  gather_facts: yes
#  vars:
#    date: "{{ ansible_date_time.year }}-{{ ansible_date_time.month }}-{{ ansible_date_time.day }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}"
#    source_db_name: "{{ SOURCE_DB }}" # stagingdb
#    new_db_name: "{{ NEW_DB  }}" # stagingdb2
#    snapshot_name: "snapshot-{{ source_db_name }}--{{ date }}"
#  tasks:
#  - name : Take RDS snapshot
#    rds  :
#      command       : snapshot
#      instance_name : "{{ source_db_name }}"
#      snapshot      : "{{ snapshot_name }}"
#      wait          : yes
#    register: snapshot_out
      
#   - name : get facts
#     rds  :
#       command       : facts
#       instance_name : "{{ instance_name }}"
#     register: db_facts
